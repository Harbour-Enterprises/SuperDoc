name: ðŸ“¦ Release [auto]

on:
  push:
    branches:
      - main
      - stable
      - '*.x' # Maintenance branches
    paths:
      - 'packages/**'
      - '!**.md'

permissions:
  contents: write
  packages: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    uses: ./.github/workflows/test-suite.yml
    with:
      run-visual: true
      run-e2e: true
    secrets: inherit

  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.SUPERDOC_PAT }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Get branch info
        run: |
          echo "Branch: ${{ github.ref_name }}"
          echo "Event: ${{ github.event_name }}"
          git branch -r
          git tag -l

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.SUPERDOC_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release --debug

      # Sync stable back to main after stable release
      - name: Sync stable to main
        if: github.ref == 'refs/heads/stable' && steps.release.outputs.released == '0'
        run: |
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Fetch and merge
          git fetch origin main
          git checkout main
          git merge stable -m "chore: sync stable release to main [skip ci]"

          # Add version bump commit
          git commit --allow-empty -m "feat: begin next development cycle [skip ci]"
          git push origin main
