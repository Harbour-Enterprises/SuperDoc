name: ðŸ“¦ Release [auto]

on:
  push:
    branches:
      - main
      - stable
      - '*.x' # Maintenance branches
    paths:
      - 'packages/**'
      - '!**.md'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    uses: ./.github/workflows/test-suite.yml
    with:
      run-visual: ${{ github.ref == 'refs/heads/stable' }}
      run-e2e: ${{ github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/stable' }}
    secrets: inherit

  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.SUPERDOC_PAT }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.SUPERDOC_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx semantic-release
          echo "released=$?" >> $GITHUB_OUTPUT

      # Sync stable back to main after stable release
      - name: Sync stable to main via PR
        if: github.ref == 'refs/heads/stable' && steps.semantic.outputs.released == '0'
        env:
          GH_TOKEN: ${{ secrets.SUPERDOC_PAT }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create a sync branch
          SYNC_BRANCH="sync-stable-to-main-$(date +%s)"
          git checkout -b $SYNC_BRANCH
          
          # Merge stable
          git fetch origin stable
          git merge origin/stable -m "chore: sync stable release to main"
          
          # Push the sync branch
          git push origin $SYNC_BRANCH
          
          # Create PR
          gh pr create \
            --base main \
            --head $SYNC_BRANCH \
            --title "ðŸ”„ Sync stable release to main" \
            --body "Auto-sync after stable release
            
            This PR syncs the latest stable release back to main.
            
            ---
            _Auto-generated by release workflow_" \
            --label "auto-sync"