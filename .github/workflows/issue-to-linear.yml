name: Sync GitHub Issues to Linear

on:
  issues:
    types: [opened]

env:
  LINEAR_TEAM_ID: ${{ secrets.LINEAR_TEAM_ID}}
  LINEAR_TOKEN: ${{ secrets.LINEAR_TOKEN }}
  LINEAR_STATE_ID: ${{ secrets.LINEAR_STATE_ID }}

jobs:
  create-linear-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Create Linear Issue
        uses: actions/github-script@v6
        with:
          script: |
            const LINEAR_TOKEN = process.env.LINEAR_TOKEN;
            const LINEAR_TEAM_ID = process.env.LINEAR_TEAM_ID;
            const LINEAR_STATE_ID = process.env.LINEAR_STATE_ID;
            
            const issue = context.payload.issue;
            
            // Prepare the Linear issue creation query
            const query = `
              mutation IssueCreate($input: IssueCreateInput!) {
                issueCreate(input: $input) {
                  issue {
                    id,
                    url
                  }
                }
              }
            `;
            
            const variables = {
              input: {
                teamId: LINEAR_TEAM_ID,
                title: issue.title,
                description: `${issue.body}\n\nCreated from GitHub Issue: ${issue.html_url}`,
                stateId: LINEAR_STATE_ID,
              }
            };
            
            // Make the API request to Linear
            try {
              const response = await fetch('https://api.linear.app/graphql', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Authorization': `Bearer ${LINEAR_TOKEN}`
                },
                body: JSON.stringify({
                  query,
                  variables
                })
              });
              
              const data = await response.json();
              
              if (data.errors) {
                throw new Error(`Linear API Error: ${JSON.stringify(data.errors)}`);
              }
              
            } catch (error) {
              core.setFailed(`Action failed: ${error}`);
            }