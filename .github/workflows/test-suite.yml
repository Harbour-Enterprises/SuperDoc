name: Test Suite

on:
  workflow_dispatch:
    inputs:
      run-visual:
        description: "Run visual tests"
        type: boolean
        default: true
      run-e2e:
        description: "Run end-to-end tests"
        type: boolean
        default: false
      update-screenshots:
        description: "Update visual snapshots"
        type: boolean
        default: false
      branch-to-test:
        description: "Branch to test (for E2E)"
        type: string
        required: false
      commit-sha:
        description: "Commit SHA (for E2E)"
        type: string
        required: false
      pr-url:
        description: "Pull request URL (for E2E)"
        type: string
        required: false
  workflow_call:
    inputs:
      run-visual:
        type: boolean
        default: true
      run-e2e:
        type: boolean
        default: false
      update-screenshots:
        type: boolean
        default: false

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Quality checks
        run: |
          npm run format:check
          npm run lint

      - name: Build
        run: npm run build

      - name: Unit tests
        run: npm test

  visual-tests:
    if: inputs.run-visual
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Get Playwright version
        id: playwright-version
        run: |
          cd examples/tests
          echo "version=$(npm ls @playwright/test --json | jq -r '.dependencies["@playwright/test"].version')" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}

      - name: Setup visual tests
        run: |
          cd examples/tests
          npm ci
          npm install -g http-server

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          cd examples/tests
          npx playwright install --with-deps chromium

      - name: Install only system deps if cache hit
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: |
          cd examples/tests
          npx playwright install-deps chromium

      - name: Run visual tests
        run: |
          cd examples/tests
          npm test ${{ inputs.update-screenshots && '-- --update-snapshots' || '' }}

      - name: Create PR with updates
        if: inputs.update-screenshots == true
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          BRANCH="visual-updates-${{ github.run_id }}"
          git checkout -b "$BRANCH"
          git add -A
          git commit -m "chore: update visual snapshots" || exit 0
          git push origin "$BRANCH"

          gh pr create \
            --base ${{ github.ref_name }} \
            --title "chore: update visual snapshots" \
            --body "Automated visual test updates" \
            --label "visual-update"

  e2e-tests:
    if: inputs.run-e2e
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Trigger E2E tests
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ steps.generate_token.outputs.token }}" \
            ${{ secrets.SD_TESTS_URL }} \
            -d '{
              "ref": "main",
              "inputs": {
                "superdoc-branch": "${{ inputs.branch-to-test || github.head_ref }}",
                "superdoc-sha": "${{ inputs.commit-sha || github.sha }}",
                "pull-request-url": "${{ inputs.pr-url || github.event.pull_request.html_url }}"
              }
            }'
